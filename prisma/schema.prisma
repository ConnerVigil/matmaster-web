// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  ID               Int       @id @default(autoincrement())
  Auth0_ID         String    @unique @db.VarChar(50)
  Username         String    @unique @db.VarChar(50)
  Email            String    @unique @db.VarChar(50)
  DOB              DateTime?
  Parental_Consent Boolean?
  Worker_ID        Int?
  Participant_ID   Int?
  Coach_ID         Int?
  Coordinator_ID   Int?
  Is_Viewer        Boolean
  Is_Active        Boolean
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // Relationships
  Worker      Workers?      @relation(fields: [Worker_ID], references: [ID])
  Participant Participants? @relation(fields: [Participant_ID], references: [ID])
  Coach       Coaches?      @relation(fields: [Coach_ID], references: [ID])
  Coordinator Coordinators? @relation(fields: [Coordinator_ID], references: [ID])

  Auth Auth[]
}

model Auth {
  ID            Int      @id @default(autoincrement())
  User_ID       Int
  User_Username String   @db.VarChar(50)
  User_Password String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  User User @relation(fields: [User_ID], references: [ID])
}

model Participants {
  ID        Int      @id @default(autoincrement())
  FirstName String   @db.VarChar(50)
  LastName  String   @db.VarChar(50)
  Bio       String?  @db.VarChar(300)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  Teams           ParticipantsTeams[]
  WeightPlans     ParticipantWeightPlans[]
  WeightHistory   ParticipantWeightHistory[]
  User            User[]
  EventTeamRoster EventTeamRoster[]
}

model Coaches {
  ID        Int      @id @default(autoincrement())
  FName     String   @db.VarChar(50)
  LName     String   @db.VarChar(50)
  Bio       String?  @db.VarChar(300)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  Teams        CoachesTeams[]
  Coordinators Coordinators[]
  User         User[]
}

model Coordinators {
  ID        Int      @id @default(autoincrement())
  Coach_ID  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  Coach   Coaches?  @relation(fields: [Coach_ID], references: [ID])
  Workers Workers[]
  User    User[]
}

model Workers {
  ID             Int      @id @default(autoincrement())
  Coordinator_ID Int
  Event_ID       Int
  Privileges_ID  Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relationships
  Coordinator Coordinators @relation(fields: [Coordinator_ID], references: [ID])
  User        User[]
}

model Teams {
  ID          Int      @id @default(autoincrement())
  Name        String   @db.VarChar(50)
  Name_Short  String   @db.VarChar(4)
  Mascot      String   @db.VarChar(25)
  Division_ID Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  CoachesTeams           CoachesTeams[]
  ParticipantsTeams      ParticipantsTeams[]
  ParticipantWeightPlans ParticipantWeightPlans[]
  EventTeamRoster        EventTeamRoster[]
}

model CoachesTeams {
  ID        Int      @id @default(autoincrement())
  Coach_ID  Int
  Team_ID   Int
  Is_Active Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  Coach Coaches @relation(fields: [Coach_ID], references: [ID])
  Team  Teams   @relation(fields: [Team_ID], references: [ID])
}

model ParticipantsTeams {
  ID             Int      @id @default(autoincrement())
  Participant_ID Int
  Team_ID        Int
  Is_Active      Boolean
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relationships
  Participant Participants @relation(fields: [Participant_ID], references: [ID])
  Team        Teams        @relation(fields: [Team_ID], references: [ID])
}

model ParticipantWeightPlans {
  ID               Int      @id @default(autoincrement())
  Participant_ID   Int
  Team_ID          Int
  Projected_Weight Int
  Weight           Int
  Weight_Deadline  DateTime
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relationships
  Participant Participants @relation(fields: [Participant_ID], references: [ID])
  Team        Teams        @relation(fields: [Team_ID], references: [ID])
}

model ParticipantWeightHistory {
  ID                              Int      @id @default(autoincrement())
  Participant_ID                  Int
  Roster_ID                       Int
  Weight                          Int
  Participant_Weight_History_Date DateTime
  createdAt                       DateTime @default(now())
  updatedAt                       DateTime @updatedAt

  // Relationships
  Participant     Participants    @relation(fields: [Participant_ID], references: [ID])
  EventTeamRoster EventTeamRoster @relation(fields: [Roster_ID], references: [ID])
}

model Event {
  ID                  Int      @id @default(autoincrement())
  Type_ID             Int
  Category_ID         Int
  Name                String   @db.VarChar(50)
  Start_Date          DateTime
  End_Date            DateTime
  Number_Matts        Int
  USA_Wrestling_Event Boolean
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relationships
  EventTeamRoster EventTeamRoster[]
  Brackets        Brackets[]
  EventCategories EventCategories[]
  EventTypes      EventTypes[]
}

model EventTeamRoster {
  ID             Int      @id @default(autoincrement())
  Event_ID       Int
  Team_ID        Int
  Participant_ID Int
  Made_Weight    Boolean?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relationships
  Event                    Event                      @relation(fields: [Event_ID], references: [ID])
  Team                     Teams                      @relation(fields: [Team_ID], references: [ID])
  Participant              Participants               @relation(fields: [Participant_ID], references: [ID])
  BrakcketPlacements       BrakcketPlacements[]
  ParticipantWeightHistory ParticipantWeightHistory[]
}

model Weights {
  ID                Int @id @default(autoincrement())
  Event_Category_ID Int
  Weight            Int

  // Relationships
  EventCategory EventCategories @relation(fields: [Event_Category_ID], references: [ID])
  Brackets      Brackets[]
}

model Divisions {
  ID   Int    @id @default(autoincrement())
  Name String @db.VarChar(100)

  // Relationships
  Brackets Brackets[]
}

model CompetitionType {
  ID   Int    @id @default(autoincrement())
  Name String @db.VarChar(100)

  // Relationships
  Brackets Brackets[]
}

model Matts {
  ID          Int    @id @default(autoincrement())
  Description String @db.VarChar(100)

  // Relationships
  Bouts Bouts[]
}

model Rounds {
  ID          Int    @id @default(autoincrement())
  Description String @db.VarChar(100)

  // Relationships
  Bouts Bouts[]
}

model EventCategories {
  ID               Int    @id @default(autoincrement())
  Event_Categories String @db.VarChar(100)

  // Relationships
  Events  Event[]
  Weights Weights[]
  Score   Score[]
}

model EventTypes {
  ID         Int    @id @default(autoincrement())
  Event_Type String @db.VarChar(100)

  // Relationships
  Events Event[]
}

model Score {
  ID                  Int    @id @default(autoincrement())
  Event_Categories_ID Int
  Point_Value         Int
  Score_Desc          String @db.VarChar(100)

  // Relationships
  EventCategory                EventCategories                @relation(fields: [Event_Categories_ID], references: [ID])
  BoutParticipantsScoreHistory BoutParticipantsScoreHistory[]
}

model WinConditions {
  ID          Int    @id @default(autoincrement())
  Desc        String @db.VarChar(100)
  Team_Points Int

  // Relationships
  Bouts Bouts[]
}

model Brackets {
  ID                  Int      @id @default(autoincrement())
  Event_ID            Int
  Competition_Type_ID Int
  Weight_ID           Int
  Division_ID         Int
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relationships
  Event              Event                @relation(fields: [Event_ID], references: [ID])
  CompetitionType    CompetitionType      @relation(fields: [Competition_Type_ID], references: [ID])
  Weight             Weights              @relation(fields: [Weight_ID], references: [ID])
  Division           Divisions            @relation(fields: [Division_ID], references: [ID])
  Bouts              Bouts[]
  BrakcketPlacements BrakcketPlacements[]
}

model Bouts {
  ID          Int      @id @default(autoincrement())
  Bracket_ID  Int
  Event_ID    Int
  Matt_ID     Int
  Round_ID    Int
  Bout_Number Int
  Bout_Time   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  Matts         Matts[]
  Rounds        Rounds[]
  WinConditions WinConditions[]
  Brackets      Brackets[]
}

model BoutParticipants {
  ID               Int      @id @default(autoincrement())
  Bout_ID          Int
  Event_Roster_ID  Int
  Win_Condition_ID Int?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relationships
  BoutParticipantsScoreHistory BoutParticipantsScoreHistory[]
}

model BoutParticipantsScoreHistory {
  ID                  Int      @id @default(autoincrement())
  Bout_Participant_ID Int
  Score_ID            Int
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relationships
  BoutParticipant BoutParticipants @relation(fields: [Bout_Participant_ID], references: [ID])
  Score           Score            @relation(fields: [Score_ID], references: [ID])
}

model BrakcketPlacements {
  ID              Int      @id @default(autoincrement())
  Event_Roster_ID Int
  Bracket_ID      Int
  Placement       Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relationships
  EventTeamRoster EventTeamRoster @relation(fields: [Event_Roster_ID], references: [ID])
  Bracket         Brackets        @relation(fields: [Bracket_ID], references: [ID])
}
